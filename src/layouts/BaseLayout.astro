---
const title = Astro.props.title || Astro.props.frontmatter.title
const description = Astro.props.description || Astro.props.frontmatter.description
const publishedDate = Astro.props.publishedDate
const lastModifiedDate = Astro.props.lastModifiedDate

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

// other missing properties
// description: A brief summary or excerpt of the blog post, often used as a meta description.
// keywords: A list of keywords or tags relevant to the blog post content.
// articleBody: The main content of the blog post, ideally as plain text or HTML.
// wordCount: The word count of the blog post.
// commentCount: The number of comments on the blog post.
// interactionStatistic: For recording engagement metrics, such as views, likes, or shares.
// alternativeHeadline: An alternative title for the blog post, often used for SEO or social media sharing.
const blogPostingData = {
  '@context': 'https://schema.org',
  '@type': 'BlogPosting',
  headline: title,
  ...(publishedDate && { datePublished: publishedDate }),
  ...(lastModifiedDate && { dateModified: lastModifiedDate }),
  author: {
    '@type': 'Person',
    name: 'Victor Li',
    url: canonicalURL.origin,
  },
  mainEntityOfPage: canonicalURL,
  description,
  image: 'https://avatars.githubusercontent.com/u/11466401?v=4?s=400',
  inLanguage: 'en',
  about: description,
  ...(publishedDate && { dateCreated: publishedDate }),
}

// other missing properties
// publisher - The organization or person who published the content. It can have properties like name, logo, and url.
// keywords - A list of keywords relevant to the content on the page
// isPartOf - Useful for indicating that a page is part of a larger work, like a series or a particular section of a website.
// relatedLink - URLs to related pages or content on the site or other external resources.
// potentialAction - Specifies actions that users can take, often used to define interactive features, such as "SearchAction" for a search bar.
// breadcrumb - Defines the breadcrumb trail on the page, which shows the user's location in the website hierarchy.
const webPageData = {
  '@context': 'https://schema.org',
  '@type': 'webPage',
  name: title,
  url: canonicalURL,
  description,
  ...(publishedDate && { datePublished: publishedDate }),
  ...(lastModifiedDate && { dateModified: lastModifiedDate }),
  author: {
    '@type': 'Person',
    name: 'Victor Li',
    url: canonicalURL.origin,
  },
  image: 'https://avatars.githubusercontent.com/u/11466401?v=4?s=400',
  mainEntityOfPage: canonicalURL,
  headline: title,
  inLanguage: 'en',
  about: description,
}
const isProd = import.meta.env.PROD
---

<!doctype html>
<html lang="en">
  <head>
    <!-- Global Metadata -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=5" />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Metadata -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content="Victor Li" />

    <!-- Color -->
    <meta name="theme-color" content="" />
    <meta name="color-scheme" content="light dark" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={publishedDate ? 'article' : 'website'} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content="https://avatars.githubusercontent.com/u/11466401?v=4?s=400" />
    <meta property="og:site_name" content="Victor Li's Personal Website" />
    <meta property="og:locale" content="en_US" />
    {
      publishedDate && (
        <>
          <meta property="article:author" content="Victor Li" />
          <meta property="article:published_time" content={publishedDate} />
          <meta property="article:modified_time" content={lastModifiedDate} />
        </>
      )
    }

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content="https://avatars.githubusercontent.com/u/11466401?v=4?s=400" />

    <!-- Canonical URL -->
    <link rel="canonical" href={canonicalURL} />

    <!-- Icon -->
    <link
      rel="icon"
      href="data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' width='48' height='48' viewBox='0 0 16 16'><text x='0' y='14'>üêµ</text></svg>"
    />

    <link rel="sitemap" href={new URL('sitemap-index.xml', Astro.site)} />

    {
      publishedDate ? (
        <script is:inline type="application/ld+json" set:html={JSON.stringify(blogPostingData, null, 2)} />
      ) : (
        <script is:inline type="application/ld+json" set:html={JSON.stringify(webPageData, null, 2)} />
      )
    }

    <style is:global>
      :root {
        --width: 720px;
        --font-main: Verdana, sans-serif;
        --font-secondary: Verdana, sans-serif;
        --font-scale: 1em;
        --background-color: #fff;
        --heading-color: #222;
        --text-color: #444;
        --link-color: #3273dc;
        --visited-color: #8b6fcb;
        --code-background-color: #f2f2f2;
        --code-color: #222;
        --blockquote-color: #222;
      }

      @media (prefers-color-scheme: dark) {
        :root {
          --background-color: #01242e;
          --heading-color: #eee;
          --text-color: #ddd;
          --link-color: #8cc2dd;
          --visited-color: #8b6fcb;
          --code-background-color: #000;
          --code-color: #ddd;
          --blockquote-color: #ccc;
        }
      }

      body {
        font-family: var(--font-secondary);
        font-size: var(--font-scale);
        margin: auto;
        padding: 20px;
        max-width: var(--width);
        text-align: left;
        background-color: var(--background-color);
        word-wrap: break-word;
        overflow-wrap: break-word;
        line-height: 1.5;
        color: var(--text-color);
      }

      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        font-family: var(--font-main);
        color: var(--heading-color);
      }

      a {
        color: var(--link-color);
        cursor: pointer;
        text-decoration: none;
      }

      a:hover {
        text-decoration: underline;
      }

      nav a {
        margin-right: 8px;
      }

      strong,
      b {
        color: var(--heading-color);
      }

      button {
        margin: 0;
        cursor: pointer;
      }

      time {
        font-family: monospace;
        font-style: normal;
        font-size: 15px;
      }

      main {
        line-height: 1.6;
      }

      table {
        width: 100%;
      }

      hr {
        border: 0;
        border-top: 1px dashed;
      }

      img {
        max-width: 100%;
      }

      blockquote {
        border-left: 1px solid #999;
        color: var(--code-color);
        padding-left: 20px;
        font-style: italic;
      }

      footer {
        padding: 25px 0;
        text-align: center;
      }

      .title:hover {
        text-decoration: none;
      }

      .title h1 {
        font-size: 1.5em;
      }

      /* blog post list */
      ul.blog-posts,
      /* for tasks list */
      ul.contains-task-list {
        list-style-type: none;
        padding: unset;
      }

      ul.blog-posts li {
        display: flex;
      }

      ul.blog-posts li span {
        flex: 0 0 130px;
      }

      ul.blog-posts li a:visited {
        color: var(--visited-color);
      }

      pre.astro-code {
        background-color: var(--code-background-color) !important;
        border-radius: 3px;
        color: var(--code-color) !important;
        padding: 15px 15px;
        margin-block-start: 1em;
        margin-block-end: 1em;
        font-family: monospace;
      }
    </style>
    {
      isProd ? (
        <script
          is:inline
          src="https://cloud.umami.is/script.js"
          data-website-id="b6fcbcca-55fc-44da-94b3-f160f56023ae"
        />
      ) : null
    }
  </head>
  <body>
    <header>
      <a class="title" href="/">
        <h1>Victor Li</h1>
      </a>
    </header>
    <nav>
      <p>
        <a href="/">Home</a>
        <a href="/blog">Blog</a>
        <a href="/projects">Projects</a>
      </p>
    </nav>
    <main>
      <slot />
    </main>
  </body>
</html>
